type GovernableFund @entity {
	id: Bytes!
	transaction: Transaction!
	fundName: String!
	fundContractAddr: Bytes!
	govContractAddr: Bytes!
	governor: Governor!
	safeProxyAddr: Bytes
	rolesModifier: Bytes
	governanceToken: Bytes
	votingContract: VotingContract!
}
type Account @entity {
	id: Bytes!
	asGovernor: Governor
	asVoting: VotingContract
	delegationFrom: [VoteDelegation!]! @derivedFrom(field: "delegator")
	delegationTo: [VoteDelegation!]! @derivedFrom(field: "delegatee")
	voteWeigth: [VoteWeight!]! @derivedFrom(field: "account")
	delegateChangedEvent: [DelegateChanged!]! @derivedFrom(field: "delegator")
	delegateChangedFromEvent: [DelegateChanged!]! @derivedFrom(field: "fromDelegate")
	delegateChangedToEvent: [DelegateChanged!]! @derivedFrom(field: "toDelegate")
	delegateVotesChangedEvent: [DelegateVotesChanged!]! @derivedFrom(field: "delegate")
	proposed: [Proposal!]! @derivedFrom(field: "proposer")
	voted: [VoteReceipt!]! @derivedFrom(field: "voter")
	proposedCalls: [ProposalCall!]! @derivedFrom(field: "target")
	events: [Event!]! @derivedFrom(field: "emitter")
}
type Governor @entity(immutable: true) {
	id: Bytes!
	asAccount: Account!
	mode: String
	governableFunds: [GovernableFund!]! @derivedFrom(field: "governor")
	proposals: [Proposal!]! @derivedFrom(field: "governor")
	proposalCreated: [ProposalCreated!]! @derivedFrom(field: "governor")
	proposalQueued: [ProposalQueued!]! @derivedFrom(field: "governor")
	proposalExecuted: [ProposalExecuted!]! @derivedFrom(field: "governor")
	proposalCanceled: [ProposalCanceled!]! @derivedFrom(field: "governor")
	votecast: [VoteCast!]! @derivedFrom(field: "governor")
}
type VotingContract @entity(immutable: true) {
	id: Bytes!
	asAccount: Account!
	totalWeight: VoteWeight!
	weight: [VoteWeight!]! @derivedFrom(field: "contract")
	delegation: [VoteDelegation!]! @derivedFrom(field: "contract")
	delegateChangedEvent: [DelegateChanged!]! @derivedFrom(field: "contract")
	delegateVotesChangedEvent: [DelegateVotesChanged!]! @derivedFrom(field: "contract")
}
type Proposal @entity {
	id: ID!
	governor: Governor!
	proposalId: BigInt!
	proposer: Account!
	voteStart: BigInt!
	voteEnd: BigInt!
	description: String!
	eta: BigInt
	canceled: Boolean!
	queued: Boolean!
	executed: Boolean!
	calls: [ProposalCall!]! @derivedFrom(field: "proposal")
	supports: [ProposalSupport!]! @derivedFrom(field: "proposal")
	receipts: [VoteReceipt!]! @derivedFrom(field: "proposal")
	proposalCreated: [ProposalCreated!]! @derivedFrom(field: "proposal")
	proposalQueued: [ProposalQueued!]! @derivedFrom(field: "proposal")
	proposalExecuted: [ProposalExecuted!]! @derivedFrom(field: "proposal")
	proposalCanceled: [ProposalCanceled!]! @derivedFrom(field: "proposal")
	votecast: [VoteCast!]! @derivedFrom(field: "proposal")
}
type ProposalCall @entity(immutable: true) {
	id: ID!
	proposal: Proposal!
	index: Int!
	target: Account!
	value: BigDecimal!
	signature: String!
	calldata: Bytes!
}
type ProposalSupport @entity {
	id: ID!
	proposal: Proposal!
	support: Int!
	weight: BigInt!
	votes: [VoteReceipt!]! @derivedFrom(field: "support")
}
type VoteReceipt @entity(immutable: true) {
	id: ID!
	proposal: Proposal!
	voter: Account!
	support: ProposalSupport!
	weight: BigInt!
	reason: String!
	params: Bytes
	voteCasts: [VoteCast!]! @derivedFrom(field: "receipt")
}
type ProposalCreated implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
	proposer: Account!
}
type ProposalQueued implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
	eta: BigInt!
}
type ProposalExecuted implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
}
type ProposalCanceled implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
}
type VoteCast implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	governor: Governor!
	proposal: Proposal!
	support: ProposalSupport!
	receipt: VoteReceipt!
	voter: Account!
}
interface Event {
	id: ID!
	transaction: Transaction!
	emitter: Account!
	timestamp: BigInt!
}
type Transaction @entity(immutable: true) {
	id: ID!
	timestamp: BigInt!
	blockNumber: BigInt!
	events: [Event!]! @derivedFrom(field: "transaction")
}
type DelegateChanged implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	delegation: VoteDelegation
	contract: VotingContract!
	delegator: Account!
	fromDelegate: Account!
	toDelegate: Account!
}
type DelegateVotesChanged implements Event @entity(immutable: true) {
	id: ID!
	emitter: Account!
	transaction: Transaction!
	timestamp: BigInt!
	voteWeight: VoteWeight
	contract: VotingContract!
	delegate: Account!
	oldValue: BigInt!
	newValue: BigInt!
}
type VoteDelegation @entity {
	id: ID!
	contract: VotingContract!
	delegator: Account!
	delegatee: Account!
	delegateChangedEvent: [DelegateChanged!]! @derivedFrom(field: "delegation")
}
type VoteWeight @entity {
	id: ID!
	contract: VotingContract!
	account: Account
	value: BigInt!
	delegateVotesChangedEvent: [DelegateVotesChanged!]! @derivedFrom(field: "voteWeight")
}
